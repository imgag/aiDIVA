## AIdiva -- Augmented Intelligence Disease Variant Analysis
# Configuration file specifiying all the parameters that are needed to run AIdiva in the different modes
# if you modify the key names make sure to also update them in the run_AIdiva.py script
---
Analysis-Input:
    # if inheritance should be considered and family information is provided, make sure that the vcf file contains sample informations for all family members,
    # else sample will be treated as single patient with unknown inheritance
    #vcf-indel: /mnt/users/ahboced1/Masterarbeit/test_data/trio_variant_call_simulated_variant_recessive_snp.vcf
    #vcf-snp: /mnt/users/ahboced1/Masterarbeit/test_data/trio_variant_call_simulated_variant_recessive_indel.vcf
    vcf: test_with_sample_information_sorted.vcf

    # path to the working directory
    #work-dir: test_workdir2/

    # path to the reference assembly used during the expansion of the indels
    ref-path: /mnt/share/data/genomes/GRCh37.fa

    # trained scoring models used to predict the pathogenicity score
    # if no trained model is present you can use the train_model.py script to train a new custom model
    scoring-model-snp: prediction_models/rf_snp_model.pkl
    scoring-model-indel: prediction_models/rf_inframeIndel_model.pkl

    prioritization-information:
        # file containing the HPO terms that are associated with the disease (one term per line)
        hpo-list: recessive_HPO.txt

        # family type, shows the structure of the given family inforamtion
        # possible values: [TRIO, FAMILY, SINGLE]
        family-type: SINGLE

        # file with the family information
        family-file: family.txt

        # List of genes that should be excluded in the analysis, because they are normally false positives
        # None or path to the file
        gene-exclusion: empty_list.txt

        # Identifier to get the score from the annotated file
        cadd-identifier: CADD_PHRED
        repeat-identifier: simpleRepeat
        duplication-identifier: segmentDuplication


Model-Features:
    # List containing the names of the allele frequency sources (populations) that are present in the data set (the MaxAF will be based on these) if not wanted use a empty list "[]" instead
    allele-frequency-list:
        - gnomAD_AFR_AF
        - gnomAD_AMR_AF
        - gnomAD_ASJ_AF
        - gnomAD_EAS_AF
        - gnomAD_FIN_AF
        - gnomAD_NFE_AF
        - gnomAD_OTH_AF
        - gnomAD_SAS_AF
        - AA_AF
        - EA_AF
        - AFR_AF
        - AMR_AF
        - EAS_AF
        - EUR_AF
        - SAS_AF

    # List containing the names of the features used for the model training
    feature-list:
        - SIFT
        - PolyPhen
        - REVEL
        - CADD_PHRED
        - ABB_SCORE
        - MAX_AF
        - segmentDuplication
        - EIGEN_PHRED
        - CONDEL
        - FATHMM_XF
        - MutationAssessor
        - phastCons46mammal
        - phastCons46primate
        - phastCons46vertebrate
        - phyloP46mammal
        - phyloP46primate
        - phyloP46vertebrate
        - homAF
        - oe_lof

VEP-Annotation:
    # Flag indicating whether to annotate the input data with VEP or not, if False then AIdiva assumes that the data is already annotated
    perform-vep-annotation: True

    # VEP install path
    vep: /mnt/share/opt/ensembl-vep-release-100.3/

    # ngs-bits install path
    ngs-bits: /mnt/share/opt/ngs-bits-current/

    # path to the annotation databases (the databases itself are given as relative path in this directory)
    db: /mnt/share/data/dbs/

    # threads to use during the annotation
    num-threads: 10

    # Cache directory and plugin directory
    cache-path: ensembl-vep-100/cache
    #plugin-path: vep_data/plugins

    # CADD: paths to the CADD database files
    cadd-snps: CADD/CADD_SNVs_1.6.tsv.gz
    cadd-indel: CADD/CADD_InDels_1.6.tsv.gz

    # REVEL: path to the REVEL database file
    revel: REVEL/revel_all_chromosomes.tsv.gz

    # dbNSFP
    #dbNSFP: dbNSFP/dbNSFP_hg19_3.5.gz

    custom:
        # BED like files here the key of the dictionary is used as the name to present the feature in the annotated file
        bed-files:
            simpleRepeat:
                file: UCSC/hg19_simpleRepeat.bed.gz
                method: overlap
            segmentDuplication:
                file: UCSC/hg19_genomicSuperDups.bed.gz
                method: overlap
            ABB_SCORE:
                file: ABB/hg19_ABB-SCORE.bed.gz
                method: exact
            oe_lof:
                file: gnomAD/gnomAD_OE_sorted.bed.gz
                method: overlap

        # VCF files the key of the dictionary is used to identify the feature in the INFO column of hte VCF file
        vcf-files:
            EIGEN_PHRED:
                file: Eigen/hg19_Eigen-phred_coding_chrom1-22.vcf.gz
                method: exact
                prefix: custom
            CONDEL:
                file: Condel/hg19_precomputed_Condel.vcf.gz
                method: exact
                prefix: fannsdb
            FATHMM_XF:
                file: fathmm-XF/hg19_fathmm_xf_coding.vcf.gz
                method: exact
                prefix: custom
            MutationAssessor:
                file: MutationAssessor/hg19_precomputed_MutationAssessor.vcf.gz
                method: exact
                prefix: custom
            gnomAD:
                file: gnomAD/gnomAD_genome_r2.1.1.vcf.gz
                method: exact
                prefix: custom

        # Bigwig files the key of the dictionary is used as the name to present the feature in the annotated file
        bigwig-files:
            phastCons46mammal:
                file: phastCons/hg19_phastCons46way_mammal.bw
                method: exact
            phastCons46primate:
                file: phastCons/hg19_phastCons46way_primate.bw
                method: exact
            phastCons46vertebrate:
                file: phastCons/hg19_phastCons46way_vertebrate.bw
                method: exact
            phyloP46mammal:
                file: phyloP/hg19_phyloP46way_mammal.bw
                method: exact
            phyloP46primate:
                file: phyloP/hg19_phyloP46way_primate.bw
                method: exact
            phyloP46vertebrate:
                file: phyloP/hg19_phyloP46way_vertebrate.bw
                method: exact


# make sure that the full path for the following files is present otherwise the prioritization step will fail
Internal-Parameters:
    hpo-resources: hpo_resources/
    #gene2hpo-mapping: hpo_resources/gene2hpo.pkl
    #hpo-graph: hpo_resources/hpo_graph.pkl
    #hpo2gene-association: hpo_resources/hpo2gene.pkl
